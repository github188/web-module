package com.ehualu.rise.service.violate.impl;

import javax.inject.Inject;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.ehualu.rise.constants.InterfaceConstant;
import com.ehualu.rise.dao.violate.DrivingLicenseDao;
import com.ehualu.rise.pojo.msg.Msg;
import com.ehualu.rise.pojo.violate.DrivingLicense;
import com.ehualu.rise.property.PropertyConfig;
import com.ehualu.rise.service.violate.DrivingLicenseService;
/**
 * 驾驶证信息接口实现
 * @author Administrator
 *
 */
@Service("drivingLicenseService")
public class DrivingLicenseServiceImpl implements DrivingLicenseService {

	private static final Logger logger = Logger.getLogger(DrivingLicenseServiceImpl.class);
	
	private DrivingLicenseDao drivingLicenseDao;

	public DrivingLicenseDao getDrivingLicenseDao() {
		return drivingLicenseDao;
	}

	@Inject
	public void setDrivingLicenseDao(DrivingLicenseDao drivingLicenseDao) {
		this.drivingLicenseDao = drivingLicenseDao;
	}
	
	/**
	 * 通过身份证明号码查询驾驶证信息
	 * @param paramJson
	 * @return
	 */
	public Msg queryLicenseBySfzmhm(String paramJson){
		logger.info("paramJson:"+paramJson);
		DrivingLicense drivingLicense = JSON.parseObject(paramJson, DrivingLicense.class);
		Msg msg = new Msg();
		//判断参数是否为空
		if(drivingLicense == null){
			msg.setStatuCode(InterfaceConstant.PARAM_IS_NULL);
			msg.setMsgBody(PropertyConfig.getProperty("PARAM_IS_NULL"));
			
			logger.info("drivingLicense == null:"+JSON.toJSONString(msg));
			return msg;
		}
		//判断身份证明号码是否为空
		if(drivingLicense.getSfzmhm() == null || (drivingLicense.getSfzmhm()).equals("")){
			msg.setStatuCode(InterfaceConstant.Code_002.LICENSE_SFZMHM_IS_NULL);
			msg.setMsgBody(PropertyConfig.getProperty("SFZMHM_IS_NULL"));
			
			logger.info("drivingLicense.getSfzmhm() == null:"+JSON.toJSONString(msg));
			return msg;
		}
		
		//查询驾驶证信息
		DrivingLicense license = drivingLicenseDao.queryLicenseBySfzmhm(drivingLicense);
		if(license == null){
			msg.setStatuCode(InterfaceConstant.RESULT_IS_NULL);
			msg.setMsgBody(PropertyConfig.getProperty("RESULT_IS_NULL"));
			
			logger.info("RESULT IS NULL:"+JSON.toJSONString(msg));
			return msg;
		}
		
		msg.setStatuCode(InterfaceConstant.STATU_SUCCESS);
		msg.setMsgBody(license);
		
		logger.info("RESULT:"+JSON.toJSONString(msg));
		return msg;
	}
}
